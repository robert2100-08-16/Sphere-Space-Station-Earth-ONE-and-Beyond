name: Ensure readme.md in every folder

on:
  workflow_run:
    workflows: ["Check if to publish"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: write

jobs:
  ensure-readmes:
    if: github.actor != 'github-actions[bot]' && (github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || github.ref }}

      - name: Create missing readme.md files
        shell: bash
        run: |
          set -euo pipefail

          # Alle Verzeichnisse außer versteckten (./.git, .github, etc.)
          # Root-Verzeichnis (.) bleibt enthalten.
          created=0
          while IFS= read -r -d '' dir; do
            # Falls bereits README/readme existiert, überspringen
            if [[ -e "$dir/README.md" || -e "$dir/readme.md" || -e "$dir/Readme.md" ]]; then
              continue
            fi
            foldername="$(basename "$dir")"
            printf '# %s\n' "$foldername" > "$dir/readme.md"
            echo "created: $dir/readme.md"
            created=$((created+1))
          done < <(find . -type d -not -path '*/.*' -print0)

      - name: Commit changes
        id: commit
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -am "chore: add missing readme.md files"
            echo "committed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No missing readme.md files found."
            echo "committed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Update publish build flags
        if: steps.commit.outputs.committed == 'true'
        id: flags
        run: |
          pip install pyyaml
          commit=$(git rev-parse HEAD)
          base=$(git rev-parse HEAD^)
          python .github/tools/publishing/set_publish_flag.py --commit "$commit" --base "$base"
          if [ -n "$(git status --porcelain publish.yml publish.yaml 2>/dev/null)" ]; then
            git add publish.yml publish.yaml 2>/dev/null
            git commit -m "chore: update publish build flags"
            echo "flags=true" >> "$GITHUB_OUTPUT"
          else
            echo "flags=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Push changes
        if: steps.commit.outputs.committed == 'true' || steps.flags.outputs.flags == 'true'
        run: |
          branch="${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_branch || github.ref_name }}"
          git pull --rebase origin "$branch"
          git push origin HEAD:"$branch"
